@model Revoluza.Models.DevBase 

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title">Edit Record</h4>
</div>
<div class="modal-body">
    @using (Ajax.BeginForm("UpdateMonitor", "Assigns", new AjaxOptions {
        HttpMethod = "POST",
        UpdateTargetId = "divMon", 
        InsertionMode = InsertionMode.Replace, 
        OnSuccess = "closeModal" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.TaskName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownList("TaskId", (SelectList)ViewData["Task"], new { @class = "form-control col-md-5", @readonly="true" } ) 
                    @Html.ValidationMessageFor(model => model.TaskId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EmpName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownList("EmpId", (SelectList)ViewData["Employee"], new { @class = "form-control col-md-5", @readonly="true" } ) 
                    @Html.ValidationMessageFor(model => model.EmpId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownList("Status", (SelectList)ViewData["Status"], new { @class = "form-control col-md-5" } ) 
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AsOnDate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.AsOnDate, new { htmlAttributes = new { @class = "datefield form-control col-md-6", @type="date" } })
                    @Html.ValidationMessageFor(model => model.AsOnDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CompleteByDate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.CompleteByDate, new { htmlAttributes = new { @class = "datefield form-control col-md-6", @type="date" } })
                    @Html.ValidationMessageFor(model => model.CompleteByDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PercentComplete, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PercentComplete, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PercentComplete, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CompletedDate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.CompletedDate, new { htmlAttributes = new { @class = "datefield form-control col-md-6", @type="date" } })
                    @Html.ValidationMessageFor(model => model.CompletedDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.Remarks,5,50, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ClientRemarks, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.ClientRemarks,5,50, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClientRemarks, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group modal-footer">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Update Status" class="btn btn-default btn-primary" />
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    }
</div>